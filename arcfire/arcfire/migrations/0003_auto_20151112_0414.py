# -*- coding: utf-8 -*-
# Generated by Django 1.9b1 on 2015-11-12 04:14
from __future__ import unicode_literals

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('arcfire', '0002_auto_20151112_0336'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='location',
            name='name',
        ),
        migrations.RemoveField(
            model_name='location',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='relation',
            name='name',
        ),
        migrations.RemoveField(
            model_name='relation',
            name='slug',
        ),
        migrations.AlterField(
            model_name='location',
            name='altitude',
            field=models.DecimalField(decimal_places=3, default=0, help_text='In meters above sea level.', max_digits=9),
        ),
        migrations.AlterField(
            model_name='location',
            name='latitude',
            field=models.DecimalField(decimal_places=6, default=0, help_text='In decimal.', max_digits=9),
        ),
        migrations.AlterField(
            model_name='location',
            name='longitude',
            field=models.DecimalField(decimal_places=6, default=90, help_text='In decimal.', max_digits=9),
        ),
        migrations.AlterField(
            model_name='location',
            name='position',
            field=models.CharField(choices=[('absolute', 'Absolute'), ('relative', 'Relative')], default='relative', help_text='When in doubt, leaves as "Relative".  "Absolute" positions establish a new reference point for sublocations: they are always relative to the ABSOLUTE_LOCATION in settings.  "Relative" positions are relative to their nearest "Absolute" parent, otherwise they are also relative to ABSOLUTE_LOCATION.  See: wiki/position', max_length=10),
        ),
        migrations.AlterField(
            model_name='location',
            name='time',
            field=models.DateTimeField(default=datetime.datetime(1900, 1, 1, 0, 0), help_text='Time begins anew in the year 50000.'),
        ),
    ]
