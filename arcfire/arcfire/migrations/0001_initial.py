# -*- coding: utf-8 -*-
# Generated by Django 1.9b1 on 2015-10-30 18:01
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
                ('scale', models.PositiveIntegerField(default=0, help_text='The magnitude of a thing, in whole numbers.  0 is average/medium/normal/default/human-sized.  e.g.: -2=XS, -1=S, 0=M, 1=L, 2=XL, 3=2XL and so on.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
                ('time', models.DateTimeField()),
                ('longitude', models.DecimalField(decimal_places=6, help_text='In decimal.', max_digits=9)),
                ('latitude', models.DecimalField(decimal_places=6, help_text='In meters.', max_digits=9)),
                ('altitude', models.DecimalField(decimal_places=3, help_text='In meters.', max_digits=9)),
                ('kind', models.CharField(choices=[('begin', 'Begin'), ('change', 'Change'), ('end', 'End')], default='change', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
                ('aspect', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('front', 'Front'), ('back', 'Back'), ('left', 'Left Side'), ('right', 'Right Side'), ('top', 'Top'), ('bottom', 'Bottom'), ('internal', 'Internal'), ('external', 'External')], default='primary', max_length=10, unique=True)),
                ('width', models.PositiveIntegerField(help_text='In pixels.')),
                ('height', models.PositiveIntegerField(help_text='In pixels.')),
                ('image', models.ImageField(height_field=models.PositiveIntegerField(help_text='In pixels.'), upload_to='', width_field=models.PositiveIntegerField(help_text='In pixels.'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
                ('aspect', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('front', 'Front'), ('back', 'Back'), ('left', 'Left Side'), ('right', 'Right Side'), ('top', 'Top'), ('bottom', 'Bottom'), ('internal', 'Internal'), ('external', 'External')], default='primary', max_length=10, unique=True)),
                ('file', models.FileField(upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationJoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('related', 'is related to'), ('attract', 'is attracted to'), ('cause', 'is caused by'), ('child', 'is child of'), ('control', 'is controlled by'), ('friend', 'is friend of'), ('inside', 'is inside of'), ('mate', 'is mate of'), ('own', 'is owned by'), ('part', 'is part of'), ('result', 'is result of'), ('subject', 'is subject of'), ('type', 'is type of')], default='related', max_length=10)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='arcfire.RelationJoin')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='arcfire.RelationJoin')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='arcfire.Item')),
            ],
            options={
                'abstract': False,
            },
            bases=('arcfire.item',),
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('location_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='arcfire.Location')),
                ('gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('none', 'None'), ('other', 'Other')], max_length=10)),
                ('species', models.CharField(help_text='TODO: Use controlled vocabulary.', max_length=255)),
                ('ki', models.DecimalField(decimal_places=3, default=0.5, help_text='Choose a number between 0.0 and 1.0.  The default is 0.5, which represents the life-force of Joe the Plumber.  0.0 is empty space, somewhere past Pluto.  1.0 is God himself. See wiki/ki for more information.', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
            ],
            options={
                'abstract': False,
            },
            bases=('arcfire.location', models.Model),
        ),
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='arcfire.Item')),
                ('mass', models.DecimalField(decimal_places=3, help_text='In kilograms.', max_digits=12)),
                ('height', models.DecimalField(decimal_places=3, help_text='In meters.', max_digits=12)),
                ('width', models.DecimalField(decimal_places=3, help_text='In meters.', max_digits=12)),
                ('length', models.DecimalField(decimal_places=3, help_text='In meters.', max_digits=12)),
                ('heading', models.DecimalField(decimal_places=3, help_text='In radians.  The angle between the direction the item is pointing and true North.', max_digits=4)),
            ],
            options={
                'abstract': False,
            },
            bases=('arcfire.item',),
        ),
        migrations.AddField(
            model_name='item',
            name='keywords',
            field=models.ManyToManyField(to='arcfire.Keyword'),
        ),
        migrations.AddField(
            model_name='item',
            name='locations',
            field=models.ManyToManyField(to='arcfire.Location'),
        ),
        migrations.AddField(
            model_name='item',
            name='pictures',
            field=models.ManyToManyField(to='arcfire.Picture'),
        ),
        migrations.AddField(
            model_name='item',
            name='plans',
            field=models.ManyToManyField(to='arcfire.Plan'),
        ),
        migrations.AddField(
            model_name='item',
            name='properties',
            field=models.ManyToManyField(to='arcfire.Property'),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('thing_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='arcfire.Thing')),
            ],
            options={
                'abstract': False,
            },
            bases=('arcfire.thing', models.Model),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('thing_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='arcfire.Thing')),
                ('gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('none', 'None'), ('other', 'Other')], max_length=10)),
                ('species', models.CharField(help_text='TODO: Use controlled vocabulary.', max_length=255)),
                ('ki', models.DecimalField(decimal_places=3, default=0.5, help_text='Choose a number between 0.0 and 1.0.  The default is 0.5, which represents the life-force of Joe the Plumber.  0.0 is empty space, somewhere past Pluto.  1.0 is God himself. See wiki/ki for more information.', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('name_secondary', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('arcfire.thing', models.Model),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='arcfire.Person')),
            ],
            options={
                'abstract': False,
            },
            bases=('arcfire.person', models.Model),
        ),
    ]
